# 활성 환경 설정 로드 (Blue or Green)
include /etc/nginx/conf.d/active-env.conf;

# 헬스체크 엔드포인트
server {
    listen 80;
    server_name localhost;

    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# HTTP -> HTTPS 리다이렉트
server {
    listen 80;
    server_name _;

    # Let's Encrypt ACME 챌린지
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# ========================================
# Frontend (React) - Blue-Green Routing
# ========================================
server {
    listen 443 ssl http2;
    server_name ${DOMAIN_FRONTEND};

    # SSL 설정
    include /etc/nginx/conf.d/ssl-params.conf;
    ssl_certificate /etc/letsencrypt/live/${DOMAIN_FRONTEND}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_FRONTEND}/privkey.pem;

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss;

    location / {
        # Blue-Green 라우팅
        set $frontend_upstream "react-blue";
        if ($active_env = "green") {
            set $frontend_upstream "react-green";
        }

        proxy_pass http://$frontend_upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # 정적 파일 캐싱
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        set $frontend_upstream "react-blue";
        if ($active_env = "green") {
            set $frontend_upstream "react-green";
        }

        proxy_pass http://$frontend_upstream;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# ========================================
# API Backend (Spring Boot) - Blue-Green Routing
# ========================================
server {
    listen 443 ssl http2;
    server_name ${DOMAIN_API};

    # SSL 설정
    include /etc/nginx/conf.d/ssl-params.conf;
    ssl_certificate /etc/letsencrypt/live/${DOMAIN_API}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_API}/privkey.pem;

    # API 라우팅
    location /api/v1 {
        # Blue-Green 라우팅
        set $backend_upstream "spring-boot-blue";
        if ($active_env = "green") {
            set $backend_upstream "spring-boot-green";
        }

        proxy_pass http://$backend_upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS 헤더
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;

        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # FastAPI 라우팅
    location /api/ai {
        # Blue-Green 라우팅
        set $ai_upstream "fastapi-blue";
        if ($active_env = "green") {
            set $ai_upstream "fastapi-green";
        }

        proxy_pass http://$ai_upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 타임아웃 설정 (AI 처리는 더 길게)
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    # Actuator 헬스체크 (모니터링용)
    location /actuator/health {
        set $backend_upstream "spring-boot-blue";
        if ($active_env = "green") {
            set $backend_upstream "spring-boot-green";
        }

        proxy_pass http://$backend_upstream;
        access_log off;
    }
}

# ========================================
# Jenkins CI/CD
# ========================================
server {
    listen 443 ssl http2;
    server_name ${DOMAIN_JENKINS};

    # SSL 설정
    include /etc/nginx/conf.d/ssl-params.conf;
    ssl_certificate /etc/letsencrypt/live/${DOMAIN_JENKINS}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_JENKINS}/privkey.pem;

    location / {
        proxy_pass http://jenkins;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Jenkins 특화 설정
        proxy_request_buffering off;
        proxy_buffering off;
    }
}

# ========================================
# Monitoring Tools
# ========================================
# Prometheus
server {
    listen 443 ssl http2;
    server_name prometheus.${DOMAIN_API};

    include /etc/nginx/conf.d/ssl-params.conf;
    ssl_certificate /etc/letsencrypt/live/${DOMAIN_API}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_API}/privkey.pem;

    location / {
        proxy_pass http://prometheus;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# Grafana
server {
    listen 443 ssl http2;
    server_name grafana.${DOMAIN_API};

    include /etc/nginx/conf.d/ssl-params.conf;
    ssl_certificate /etc/letsencrypt/live/${DOMAIN_API}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_API}/privkey.pem;

    location / {
        proxy_pass http://grafana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
